<?xml version="1.0" encoding="UTF-8"?>
<!-- SQL 맵퍼 파일은 xml이기 때문에 제일 먼저 xml 선언이 옵니다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bnd.dailyband.mybatis.mapper.AdminMapper">

  <!-- 회원 목록 -->
  <select id="getMemberList" resultType="map">
    SELECT m.*,
           CASE
             WHEN bpi.MBR_PRPT_STTUS IN (1, 2) THEN
               COALESCE(r.BAND_TEAM_NM,
                        (SELECT rb2.BAND_TEAM_NM
                         FROM RCRIT_BBS rb2
                         WHERE rb2.BBS_SN = bpi.BBS_SN
                           AND rb2.BAND_TEAM_NM IS NOT NULL
                         LIMIT 1))
             END AS BAND_NM
    FROM MBR_INFO m
           LEFT JOIN
         BAND_PRPT_INFO bpi ON m.MBR_ID = bpi.MBR_ID
           LEFT JOIN
         RCRIT_BBS r ON m.MBR_ID = r.MBR_ID
    WHERE m.MBR_ID != 'admin'
    GROUP BY m.MBR_ID, bpi.MBR_PRPT_STTUS;
  </select>

  <!-- 회원 권한 변경 -->
  <update id="changeType">
    update MBR_INFO
    set MBR_TY = #{role}
    where MBR_ID = #{id}
  </update>

  <!-- 회원 상태 변경 -->
  <update id="changeStatus">
    update MBR_INFO
    set MBR_STTUS = #{newStatus}
    where MBR_ID = #{id}
  </update>

  <!-- 전체 회원 수 -->
  <select id="getTotalMbrCount">
    select count(*)
    from MBR_INFO;
  </select>

  <!-- 일일 가입자 수-->
  <select id="getTodayMbrCount">
    select count(*)
    from MBR_INFO
    where date_format(REG_DT, '%Y-%m-%d') = date_format(now(), '%Y-%m-%d');
  </select>

  <!-- 방문정보 추가 -->
  <insert id="insertVisit">
    insert into VISIT_INFO (VISIT_DT)
    VALUES (NOW())
  </insert>

  <!-- 전체 방문 수-->
  <select id="getVisitCount" resultType="int">
    select COUNT(*)
    from VISIT_INFO
  </select>

  <!-- 일일 방문 수-->
  <select id="getTodayVisitCount" resultType="int">
    SELECT COUNT(*)
    FROM VISIT_INFO
    WHERE DATE(VISIT_DT) = CURDATE()
  </select>

  <!-- 결재 대기 문서 -->
  <select id="getApvWaitCnt">
    select count(*) from APPROVAL
    where APV_STTUS = 0
    and MBR_ID = #{id}
  </select>

  <!-- 결재 예정 문서 -->
  <select id="getApvScheduledCnt">
    select count(*) from APPROVAL
    where APV_STTUS = 1
    and MBR_ID = #{id}
  </select>

  <!-- 지역별 회원 선호 지역 -->
  <select id="getPreferAreaCnt" resultType="map">
    select bc.CTGRY_NM as name, count(m.MBR_PREFER_AREA) as count
    from BAND_CTGRY bc
           left join MBR_INFO m
                     on instr(m.MBR_PREFER_AREA, bc.CTGRY_ID)
    where bc.CTGRY_TY = 0
    group by bc.CTGRY_NM
    having count > 0
    order by bc.CTGRY_NM
  </select>

  <!-- 장르별 회원 선호 장르 -->
  <select id="getPreferGenreCnt" resultType="map">
    select bc.CTGRY_NM as name, count(m.MBR_PREFER_GENRE) as count
    from BAND_CTGRY bc
           left join MBR_INFO m
                     on instr(m.MBR_PREFER_GENRE, bc.CTGRY_ID)
    where bc.CTGRY_TY = 1
    group by bc.CTGRY_NM
    having count > 0
    order by bc.CTGRY_NM
  </select>

  <!-- 분야별 회원 활동 분야 -->
  <select id="getActRealmCnt" resultType="map">
    select bc.CTGRY_NM as name, count(m.MBR_ACT_REALM) as count
    from BAND_CTGRY bc
           left join MBR_INFO m
                     on instr(m.MBR_ACT_REALM, bc.CTGRY_ID)
    where bc.CTGRY_TY = 2
    group by bc.CTGRY_NM
    having count > 0
    order by bc.CTGRY_NM
  </select>

  <!--게시판별 게시글 수 -->
  <select id="getBbsCnt" resultType="map">
    select *
    from (select b.BBS_TY_NM as bbsNm, count(*) as cnt
          from GNRL_BBS g
                 inner join BBS_CTGRY b
                            on g.BBS_TY_ID = b.BBS_TY_ID
          group by b.BBS_TY_NM
          union
          select b.BBS_TY_NM as bbsNm, count(*) as cnt
          from RCRIT_BBS r
                 inner join BBS_CTGRY b
                            on r.BBS_TY_ID = b.BBS_TY_ID
          group by b.BBS_TY_NM) b
    order by bbsNm;
  </select>

  <!-- 일별 가입자 수 -->
  <select id="getDayRegCnt" resultType="map">
    select DATE(REG_DT) as date, count(*) as cnt
    from MBR_INFO
    group by DATE(REG_DT)
    order by date;
  </select>

  <!-- 일별 방문 수-->
  <select id="getDayVisitCnt" resultType="map">
    select DATE(VISIT_DT) as date, count(*) as cnt
    from VISIT_INFO
    group by DATE(VISIT_DT)
    order by date;
  </select>

  <!-- 밴드원 모집 조회-->
  <select id="getRboardList" resultType="map">
    SELECT rb.*,
           COALESCE(prpt.PRPT_STTUS, 0) AS PRPT_STTUS,
           COALESCE(joined.JOIN_STTUS, 0) AS JOIN_STTUS,
           cr.CHAT_ROOM_ID
    FROM RCRIT_BBS rb
           LEFT OUTER JOIN (
      SELECT bpi.BBS_SN, COUNT(bpi.BBS_SN) AS PRPT_STTUS
      FROM BAND_PRPT_INFO bpi
      WHERE bpi.MBR_PRPT_STTUS IN (1, 2)
      GROUP BY bpi.BBS_SN
    ) prpt ON rb.BBS_SN = prpt.BBS_SN
           LEFT OUTER JOIN (
      SELECT bpi.BBS_SN, COUNT(bpi.BBS_SN) AS JOIN_STTUS
      FROM BAND_PRPT_INFO bpi
      WHERE bpi.MBR_PRPT_STTUS = 0
      GROUP BY bpi.BBS_SN
    ) joined ON rb.BBS_SN = joined.BBS_SN
           LEFT OUTER JOIN CHAT_ROOM cr ON rb.BAND_TEAM_NM = cr.CHAT_NM
    order by rb.REG_DT desc
  </select>

  <!-- 커뮤니티 게시글 조회 -->
  <select id="getGboardList" resultType="map">
    select g.BBS_SN, bbs.BBS_TY_NM, BBS_SJ, m.MBR_ID, m.MBR_NCNM,  BBS_REMD_CNT, BBS_READ_CNT, g.REG_DT
    from GNRL_BBS g
    join BBS_CTGRY bbs
    on g.BBS_TY_ID = bbs.BBS_TY_ID
    join MBR_INFO m
    on g.MBR_ID = m.MBR_ID
    order by g.REG_DT desc
  </select>

  <!-- 커뮤니티 댓글 조회 -->
  <select id="getGboardCmntList" resultType="map">
    select CMNT_SN, g.BBS_SN, bbs.BBS_TY_NM, g.BBS_SJ, CMNT_CN, m.MBR_ID, m.MBR_NCNM, cmnt.CMNT_REMD_CNT, cmnt.REG_DT
    from BBS_CMNT cmnt
    join BBS_CTGRY bbs
    on cmnt.BBS_TY_ID = bbs.BBS_TY_ID
    join GNRL_BBS g
    on cmnt.BBS_SN = g.BBS_SN
    join MBR_INFO m
    on cmnt.MBR_ID = m.MBR_ID
    order by cmnt.REG_DT desc
  </select>

  <!-- 커뮤니티 게시글 삭제 -->
  <delete id="gBoardDelete">
    delete from GNRL_BBS
    where BBS_SN = #{num}
  </delete>


  <!-- 커뮤니티 댓글 삭제 -->
  <delete id="gBoardCmntDelete">
    delete from BBS_CMNT
    where CMNT_SN = #{num}
  </delete>

  <!-- 합주실 예약 리스트 -->
  <select id="getRoomResList" resultType="map">
    select res.cal_id, room_number, res.bbs_sn, rb.BAND_TEAM_NM, start, end, status, res.reg_dt
    from RESERVATION res
    left join RCRIT_BBS rb
    on res.bbs_sn = rb.BBS_SN;
  </select>

  <!-- 합주실 예약 수락 -->
  <update id="resAccept">
    update RESERVATION set status = '수락'
    where cal_id = #{num}
  </update>

  <!-- 합주실 예약 거절 -->
  <delete id="resReject">
    delete from RESERVATION where cal_id = #{num}
  </delete>

  <!-- 기안 문서 리스트 -->
  <select id="getApvDraftList" resultType="ApvDoc">
    select DOC_SN,
           DOC_FORM_TY,
           MBR_ID,
           DOC_SJ,
           DOC_CN,
           DOC_STTUS,
           DOC_WRT_DT
    from APV_DOC
    where MBR_ID = #{id}
      and DOC_STTUS != '4'
    order by DOC_SN desc
  </select>

  <!-- 임시 문서 리스트 -->
<select id="getApvTempList" resultType="ApvDoc">
  select DOC_SN,
         DOC_FORM_TY,
         MBR_ID,
         DOC_SJ,
         DOC_CN,
         DOC_STTUS,
         DOC_WRT_DT
  from APV_DOC
  where MBR_ID = #{id}
    and DOC_STTUS = '4'
  order by DOC_SN desc
</select>

  <!-- 결재 문서 리스트 -->
  <select id="getApvList" resultType="ApvDoc">
    select doc.DOC_SN,
    doc.DOC_FORM_TY,
    doc.DOC_SJ,
    doc.DOC_CN,
    doc.DOC_WRT_DT,
    doc.MBR_ID,
    m.MBR_NCNM,
    APV_STTUS,
    doc.DOC_STTUS
    from APV_DOC doc
    join APPROVAL apv
    on doc.DOC_SN = apv.DOC_SN
    join MBR_INFO m
    on doc.MBR_ID = m.MBR_ID
    where apv.MBR_ID = #{id}
    <choose>
      <when test="docSttus.toString() == '5'">
        and DOC_STTUS = #{docSttus}
      </when>
      <otherwise>
        and DOC_STTUS != '4'
      </otherwise>
    </choose>
    order by doc.DOC_SN desc
  </select>

  <!-- 참조 문서 리스트 -->
  <select id="getApvRefList" resultType="ApvDoc">
    select doc.DOC_SN,
    DOC_FORM_TY,
    DOC_SJ,
    DOC_CN,
    DOC_WRT_DT,
    doc.MBR_ID,
    m.MBR_NCNM,
    REF_STTUS,
    DOC_STTUS
    from APV_DOC doc
    join APV_REF ref
    on doc.DOC_SN = ref.DOC_SN
    join MBR_INFO m
    on doc.MBR_ID = m.MBR_ID
    where ref.MBR_ID = #{id}
    <choose>
      <when test="docSttus.toString() == '5'">
        and DOC_STTUS = #{docSttus}
      </when>
      <otherwise>
        and DOC_STTUS != '4'
      </otherwise>
    </choose>
    order by doc.DOC_SN desc
  </select>

  <!-- 전자결재 결재자, 참조자 회원 리스트  -->
  <select id="getApvMbrList" resultType="Member">
    select MBR_ID, MBR_NCNM, MBR_TY
    from MBR_INFO
    where MBR_ID != #{id}
      and MBR_TY in ('ROLE_ADMIN', 'ROLE_MANAGER')
  </select>

  <!-- 기안 문서 작성 -->
  <insert id="insertDoc">
    insert into APV_DOC (DOC_FORM_TY, MBR_ID, DOC_SJ, DOC_CN, DOC_STTUS)
    values (#{DOC_FORM_TY}, #{MBR_ID}, #{DOC_SJ}, #{DOC_CN}, #{DOC_STTUS})
  </insert>

  <!-- 결재자 등록 -->
  <insert id="insertApv" parameterType="map">
    <selectKey resultType="int" order="BEFORE" keyProperty="DOC_SN">
      (select MAX(DOC_SN) from APV_DOC)
    </selectKey>

    insert into APPROVAL (MBR_ID, DOC_SN, APV_LEV, APV_STTUS)
    values (#{MBR_ID},
    <choose>
      <when test="DOC_SN == 0">#{DOC_SN}
      </when>
      <otherwise>
        #{DOC_SN}
      </otherwise>
    </choose>
    ,#{APV_LEV}
    ,#{APV_STTUS}
    )
  </insert>

  <!-- 참조자 등록 -->
  <insert id="insertRef" parameterType="map">
    insert into APV_REF (MBR_ID, DOC_SN, REF_STTUS)
    values (#{MBR_ID},
    <choose>
      <when test="DOC_SN == 0">(select MAX(DOC_SN) from APV_DOC)
      </when>
      <otherwise>
        #{DOC_SN}
      </otherwise>
    </choose>
    ,#{REF_STTUS}
    )
  </insert>

  <!-- 결재자/참조자 선택 모달창 닉네임 검색 -->
  <select id="getApvMbrNcnmSearch" resultType="Member">
    select MBR_ID, MBR_NCNM, MBR_TY
    from MBR_INFO
    where MBR_ID != #{id}
      and MBR_TY in ('ROLE_ADMIN', 'ROLE_MANAGER')
      and MBR_NCNM like CONCAT('%',#{searchKeyword},'%')
  </select>

  <!-- 문서 조회 -->
  <select id="getDocDetail">
    select DOC_SN,
           DOC_FORM_TY,
           ad.MBR_ID,
           m.MBR_NCNM,
           m.MBR_TY,
           DOC_SJ,
           DOC_CN,
           DOC_STTUS,
           DOC_WRT_DT
    from APV_DOC ad
           join MBR_INFO m on ad.MBR_ID = m.MBR_ID
    where DOC_SN = #{docSn}
  </select>

  <!-- 문서 조회(결재자) -->
  <select id="getApvDetail">
    select APV_SN,
           DOC_SN,
           apv.MBR_ID,
           m.MBR_NCNM,
           m.MBR_TY,
           APV_LEV,
           APV_STTUS,
           REJ_RSN,
           APV_DT,
           apv.REG_DT
    from APPROVAL apv
           join MBR_INFO m on apv.MBR_ID = m.MBR_ID
    where DOC_SN = #{DOC_SN}
    order by APV_LEV
  </select>

  <!-- 문서 조회(참조자) -->
  <select id="getRefDetail">
    select REF_SN, ref.MBR_ID, m.MBR_NCNM, m.MBR_TY, DOC_SN, REF_STTUS, REF_REG_DT
    from APV_REF ref
           join MBR_INFO m
                on ref.MBR_ID = m.MBR_ID
    where DOC_SN = #{docSn}
    order by REF_SN
  </select>

  <!-- 문서 삭제(상신 취소) -->
  <delete id="deleteDoc">
    delete from APV_DOC where DOC_SN = #{docSn}
  </delete>

  <!-- 임시 저장 문서 수정 -->
  <update id="modifyDoc">
    update APV_DOC set DOC_SJ = #{DOC_SJ},
                       DOC_CN = #{DOC_CN},
                       DOC_STTUS = #{DOC_STTUS},
                       DOC_WRT_DT = #{DOC_WRT_DT},
                       DOC_MDF_DT = now()
    where DOC_SN = #{DOC_SN}
  </update>

  <!-- 결재자 삭제 -->
  <delete id="deleteApv">
    delete from APPROVAL where DOC_SN = #{docSn}
  </delete>

  <!-- 결재자 상태 변경 (temp - 대기/예정) -->
  <update id="modifyApv">
    update APPROVAL set APV_STTUS = #{APV_STTUS}
    where DOC_SN = #{DOC_SN}
    and  MBR_ID = #{MBR_ID}
    and APV_LEV = #{APV_LEV}
  </update>

  <!-- 참조자 삭제 -->
  <delete id="deleteRef">
    delete from APV_REF where DOC_SN = #{docSn}
  </delete>

  <!-- 참조자 상태 변경 (temp - 참조) -->
  <update id="modifyRef">
    update APV_REF set REF_STTUS = #{REF_STTUS}
    where DOC_SN = #{DOC_SN}
  </update>

  <!-- 결재자 결재 상태 -->
  <select id="getApvStatusList">
    select * from APPROVAL where DOC_SN = #{docSn}
    and APV_STTUS = 1
    order by APV_LEV
  </select>

  <!-- 다음 결재자 상태 변경 -->
  <update id="modifyApvNext">
    update APPROVAL set APV_STTUS = 0
    where APV_SN = #{apvSn}
  </update>

  <!-- 결재 상태 수정 -->
  <update id="modifyApvStatus">
    update APPROVAL set APV_STTUS = #{APV_STTUS}, APV_DT = #{APV_DT}
    <if test="REJ_RSN != null">
      , REJ_RSN = #{REJ_RSN}
    </if>
    where DOC_SN = #{DOC_SN}
    and MBR_ID = #{MBR_ID}
  </update>

  <!-- 문서 상태 수정 -->
  <update id="modifyDocStatus">
    update APV_DOC set DOC_STTUS = #{DOC_STTUS}
    where DOC_SN = #{DOC_SN}
  </update>

  <select id="getDocSn" >
    select MAX(DOC_SN) from APV_DOC
    where MBR_ID = #{docMbrId}
  </select>

  <select id="getMbrNCNM">
    select MBR_NCNM
    from APV_DOC a
    join MBR_INFO m
    on a.MBR_ID = m.MBR_ID
    where DOC_SN = #{docSn}
  </select>

  <select id="getMbrId">
    select MBR_ID from APV_DOC
    where DOC_SN = #{DOC_SN}
  </select>

  <select id="getApvMbrNcnm">
    select MBR_NCNM from MBR_INFO where MBR_ID = #{apvMbrId}
  </select>

  <select id="resWaitCnt">
    select count(*) from RESERVATION
    where status = '대기'
  </select>

</mapper>